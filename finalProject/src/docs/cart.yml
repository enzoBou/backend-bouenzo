paths:
  /api/cart:
    post:
      summary: cart created
      tags:
        - Cart
      responses:
        "200":
          description: cart created successfully
        "500":
          description: Internal Server Error
  /api/cart/{cid}:
    get:
      summary: get products to cart
      tags:
        - Cart
      parameters:
      - name: cid
        in: path
        required: true
        description: id of product to get
        schema:
          $type: object
      responses:
        "200":
          description: get products to cart
          content:
            application/json:
              schema:
                $ref: '#components/schemas/products'
        "500":
          description: Internal Server Error
  /api/cart/{cid}/products/{pid}:
    post:
      summary: add product to cart
      tags:
        - Cart
      parameters:
      - name: pid
        in: path
        required: true
        description: id of product to add
        schema:
          $type: object
      responses:
        "200":
          description: add product to cart successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/products'
        "500":
          description: Internal Server Error
    delete:
      summary: delete products from cart
      tags:
        - Cart
      parameters:
      - name: pid
        in: path
        required: true
        description: id of product to delete
        schema:
          $type: object
      responses:
        "200":
          description: delete product to cart successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/products'
        "500":
          description: Internal Server Error
    put:
      summary: update products from cart
      tags:
        - Cart
      parameters:
      - name: pid
        in: path
        required: true
        description: id of product to update
        schema:
          $type: object
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: '#components/requestBodies/updateProducts'
      responses:
        "200":
          description: update product to cart successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/products'
        "500":
          description: Internal Server Error
  /api/cart/{cid}/products:
    delete:
      summary: delete cart
      tags:
        - Cart
      parameters:
      - name: cid
        in: path
        required: true
        description: delete all products from cart
        schema:
          $type: object
      responses:
        "200":
          description: delete products to cart successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/products'
        "500":
          description: Internal Server Error
  /api/cart/{cid}/purchase:
    post:
      summary: delete cart
      tags:
        - Cart
      parameters:
      - name: cid
        in: path
        required: true
        description: delete all products from cart
        schema:
          $type: object
      responses:
        "200":
          description: delete products to cart successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/products'
        "500":
          description: Internal Server Error
components:
  schemas:
    Products:
      type: object
      properties:
        _id:
          type: ObjectID
          description: Id generated by Mongo
        title:
          type: string
          description: title of the product
        description:
          type: string
          description: description of product
        category:
          type: string
          description: category of product
        price:
          type: number
          description: price of product
        code:
          type: number
          description: code of product
        stock:
          type: number
          description: stock of product
      example:
        _id: ObjectId("086r3023v87e3843t93")
        title: pantalon
        description: pantalon cargo
        category: pantalon
        price: 2000
        code: 089
        stock: 300
    Ticket:
      type: object
      properties:
        _id:
          type: ObjectID
          description: Id generated by Mongo
        code:
          type: number
          description: code of purchase
        purchase_datetime:
          type: date
          description: date of purchase
        amount:
          type: number
          description: amount of purchase
        purchaser:
          type: string
          description: purchaser
  requestBodies:
    updateProduct:
      type: object
      properties:
        _id:
          type: ObjectID
          description: Id generated by Mongo
        title:
          type: string
          description: title of the product
        description:
          type: string
          description: description of product
        category:
          type: string
          description: category of product
        price:
          type: number
          description: price of product
        code:
          type: number
          description: code of product
        stock:
          type: number
          description: stock of product
      example:
        _id: ObjectId("086r3023v87e3843t93")
        title: pantalon
        description: pantalon cargo
        category: pantalon
        price: 2000
        code: 089
        stock: 300