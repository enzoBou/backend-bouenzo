paths:
  /api/products/:
    get:
      summary: get all products
      tags:
        - Products
      responses:
        "200":
          description: get all products from DB
        "500":
          description: Internal Server Error
    post:
      summary: post all products
      tags:
        -Products
      responses:
        "200":
          description: get all products filtered from DB
        "500":
          description: Internal Server Error
  /api/products/filter/:
    get:
      summary: get all products filtered
      tags:
        - Products
      responses:
        "200":
          description: get all products filtered from DB
        "500":
          description: Internal Server Error
  /api/products/{pid}/:
    get:
      summary: get products by id
      tags:
        - Products
      responses:
        "200":
          description: get products by id from DB
        "404":
          description: Error 404 not found
        "500":
          description: Internal Server Error
    put:
      summary: put products by id
      tags:
        - Products
      parameters:
      - name: pid
        required: true
        description: id of product to update
        schema:
          $type: object
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: '#components/requestBodies/updateProducts'
      responses:
        "200":
          description: get products by id from DB
        "404":
          description: Error 404 not found
        "500":
          description: Internal Server Error
    delete:
      summary: get products by id
      tags:
        - Products
      responses:
        "200":
          description: get products by id from DB
        "404":
          description: Error 404 not found
        "500":
          description: Internal Server Error

components:
  schemas:
    Products:
      type: object
      properties:
        _id:
          type: ObjectID
          description: Id generated by Mongo
        title:
          type: string
          description: title of the product
        description:
          type: string
          description: description of product
        category:
          type: string
          description: category of product
        price:
          type: number
          description: price of product
        code:
          type: number
          description: code of product
        stock:
          type: number
          description: stock of product
      example:
        _id: ObjectId("086r3023v87e3843t93")
        title: pantalon
        description: pantalon cargo
        category: pantalon
        price: 2000
        code: 089
        stock: 300
  requestBodies:
    updateProduct:
      type: object
      properties:
        _id:
          type: ObjectID
          description: Id generated by Mongo
        title:
          type: string
          description: title of the product
        description:
          type: string
          description: description of product
        category:
          type: string
          description: category of product
        price:
          type: number
          description: price of product
        code:
          type: number
          description: code of product
        stock:
          type: number
          description: stock of product
      example:
        _id: ObjectId("086r3023v87e3843t93")
        title: pantalon
        description: pantalon cargo
        category: pantalon
        price: 2000
        code: 089
        stock: 300
